// Generated by CoffeeScript 1.6.3
(function() {
  window.api_key = 'special-key';

  describe('Swagger Api Listing for remote 1.2 spec', function() {
    beforeEach(function() {
      var success;
      return success = function() {
        return log("success");
      };
    });
    return describe("verifies loading a specification", function() {
      beforeEach(function() {
        window.body = null;
        window.response = null;
        window.callback = null;
        window.error = null;
        window.success_callback = function(data) {
          return window.response = data;
        };
        return window.error_callback = function(data) {
          return window.error = data;
        };
      });
      it("verifies a 1.2 spec can be generated", function() {
        var cb, swagger, url;
        url = "http://petstore.swagger.wordnik.com/api/api-docs";
        swagger = new window.SwaggerApi(url);
        cb = function(data) {
          var resourceListing;
          resourceListing = data;
          return expect(resourceListing).toBeDefined;
        };
        return swagger.specFromURL(url, cb);
      });
      return it("verifies a 1.2 spec has expected apis", function() {
        var cb, swagger, url;
        url = "http://petstore.swagger.wordnik.com/api/api-docs";
        swagger = new window.SwaggerApi(url);
        cb = function(data) {
          var api, resourceListing, _i, _len, _ref, _results;
          resourceListing = data;
          expect(resourceListing.apiDeclarations.length).toBe(3);
          _ref = resourceListing.apiDeclarations;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            api = _ref[_i];
            expect(api.resourcePath).toBeDefined;
            expect(api.apiVersion).toBeDefined;
            expect(api.swaggerVersion).toBe('1.2');
            expect(api.basePath).toBe("http://petstore.swagger.wordnik.com/api");
            expect(api.apis).toBeDefined;
            _results.push(expect(api.models).toBeDefined);
          }
          return _results;
        };
        return swagger.specFromURL(url, cb);
      });
    });
  });

}).call(this);
